{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000',\n  // Backend server URL\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Prevent axios from automatically adding trailing slashes\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // Accept all status codes less than 500\n  }\n});\n\n// Add a request interceptor to add the auth token\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // Remove trailing slash from URL if it exists\n  if (config.url && config.url.endsWith('/')) {\n    config.url = config.url.slice(0, -1);\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // Handle 308 Permanent Redirect\n    if (error.response.status === 308) {\n      const originalUrl = error.config.url;\n      const redirectUrl = error.response.headers.location;\n      // Retry the request with the correct URL\n      return instance.get(redirectUrl);\n    }\n\n    // Handle other errors\n    if (error.response.status === 401) {\n      // Clear token and redirect to login\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","headers","validateStatus","status","interceptors","request","use","config","token","localStorage","getItem","Authorization","url","endsWith","slice","error","Promise","reject","response","originalUrl","redirectUrl","location","get","removeItem","window","href"],"sources":["/Users/vaibhavreddy/Desktop/projects/ai-learning-hub/frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000',  // Backend server URL\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  // Prevent axios from automatically adding trailing slashes\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // Accept all status codes less than 500\n  },\n});\n\n// Add a request interceptor to add the auth token\ninstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    // Remove trailing slash from URL if it exists\n    if (config.url && config.url.endsWith('/')) {\n      config.url = config.url.slice(0, -1);\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle errors\ninstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      // Handle 308 Permanent Redirect\n      if (error.response.status === 308) {\n        const originalUrl = error.config.url;\n        const redirectUrl = error.response.headers.location;\n        // Retry the request with the correct URL\n        return instance.get(redirectUrl);\n      }\n      \n      // Handle other errors\n      if (error.response.status === 401) {\n        // Clear token and redirect to login\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,uBAAuB;EAAG;EACnCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACD;EACAC,cAAc,EAAE,SAAAA,CAAUC,MAAM,EAAE;IAChC,OAAOA,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG,CAAC,CAAC;EACxC;AACF,CAAC,CAAC;;AAEF;AACAL,QAAQ,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACN,OAAO,CAACU,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA;EACA,IAAID,MAAM,CAACK,GAAG,IAAIL,MAAM,CAACK,GAAG,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC1CN,MAAM,CAACK,GAAG,GAAGL,MAAM,CAACK,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC;EACA,OAAOP,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,QAAQ,CAACM,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC/BY,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA,IAAIH,KAAK,CAACG,QAAQ,CAACf,MAAM,KAAK,GAAG,EAAE;MACjC,MAAMgB,WAAW,GAAGJ,KAAK,CAACR,MAAM,CAACK,GAAG;MACpC,MAAMQ,WAAW,GAAGL,KAAK,CAACG,QAAQ,CAACjB,OAAO,CAACoB,QAAQ;MACnD;MACA,OAAOvB,QAAQ,CAACwB,GAAG,CAACF,WAAW,CAAC;IAClC;;IAEA;IACA,IAAIL,KAAK,CAACG,QAAQ,CAACf,MAAM,KAAK,GAAG,EAAE;MACjC;MACAM,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACH,QAAQ,CAACI,IAAI,GAAG,QAAQ;IACjC;EACF;EACA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}